params {
    // Base directory that can be overridden by users
    base_dir = "$projectDir"
    
    // Main directories
    input_path = "${params.base_dir}"
    output_path = "${params.base_dir}/results"
    annotate_dir = "${params.base_dir}/data/annotations"
    ref_dir = "${params.base_dir}/data/reference"
    humandb_dir = "${params.base_dir}/data/annovar/humandb"
    
    // Tool-specific directories
    config_dir = "${params.base_dir}/config/knotannotsv"
    model_path = "${params.base_dir}/models"
    bin_dir = "${params.base_dir}/bin"
    
    // Output directories
    out_dir_epi2me = "${params.output_path}/epi2me"
    sv_folder = "${params.output_path}/epi2me/episv"
    bedmethyl_folder = "${params.output_path}/epi2me/epimodkit"
    segsfromepi2me_folder = "${params.output_path}/epi2me/epicnv/qdnaseq"
    
    // Reference files
    reference_genome = "${params.ref_dir}/GCF_000001405.39_GRCh38.p13_genomic_chr_only_plus_mt.fa"
    reference_genome_bai = "${params.ref_dir}/GCF_000001405.39_GRCh38.p13_genomic_chr_only_plus_mt.fa.fai"
    ncbirefseq = "${params.ref_dir}/ncbiRefSeq.txt.gz"
    
    // Bed files
    occ_fusions = "${params.ref_dir}/OCC.fusions.bed"
    epicsites = "${params.ref_dir}/EPIC_sites_NEW.bed"
    mgmt_cpg_island_hg38 = "${params.ref_dir}/MGMT_CpG_Island.hg38.bed"
    occ_snv_screening = "${params.ref_dir}/OCC.SNV.screening.bed"
    tertp_variants = "${params.ref_dir}/TERTp_variants.bed"
    tr_bed_file = "${params.ref_dir}/human_GRCh38_trf.bed"
    
    // Database files
    refgene = "${params.humandb_dir}/hg38_refGene.txt"
    hg38_refgenemrna = "${params.humandb_dir}/hg38_refGeneMrna.fa"
    clinvar = "${params.humandb_dir}/hg38_clinvar_20240611.txt"
    clinvarindex = "${params.humandb_dir}/hg38_clinvar_20240611.txt.idx"
    hg38_cosmic100 = "${params.humandb_dir}/hg38_cosmic100coding2024.txt"
    hg38_cosmic100index = "${params.humandb_dir}/hg38_cosmic100coding2024.txt.idx"
    
    // Configuration files
    knotannotsv_conf = "${params.config_dir}/config_AnnotSV.yaml"
    convertvariant_config = "${params.ref_dir}/annotsv2.json"
    vcf2circos_json = "${params.ref_dir}/options.json"
    
    // Model files
    sturgeon_model = "${params.ref_dir}/general.zip"
    nanodx_450model = "${params.ref_dir}/nanoDx/static/Capper_et_al_NN.pkl"
    nanodx_dictinaire = "${params.ref_dir}/nanoDx/static/Capper_et_al_dictionary.txt"
    hg19_450model = "${params.ref_dir}/nanoDx/static/hg19_450model.bed"
    
    // Workflow files
    nn_model = "${params.ref_dir}/nanoDx/workflow/envs/NN_model.yaml"
    snakefile_nanodx = "${params.ref_dir}/nanoDx/workflow/Snakefile"
    sub_snakefile = "${params.ref_dir}/nanoDx/workflow/methylation.snakefile"
    
    // Other resources
    occ_genes = "${params.ref_dir}/OCCgenes.rds"
    gviz_data = "${params.ref_dir}/Gviz.RData"
    cytoband_file = "${params.ref_dir}/cytoBandIdeo.hg38.txt"
    occ_fusion_genes_list = "${params.ref_dir}/occ_fusions_genes.txt"
    
    // Sample configuration
    analyse_sample_id_file = params.run_order_mode ? null : "${params.base_dir}/testdata/sample_ids.txt"
    
    // BAM directories
    occ_bam_folder = "${params.base_dir}/testdata/single_bam_folder/occ_bam"
    merge_bam_folder = params.run_order_mode ? 
        "${params.base_dir}/results/merge_bam" : 
        "${params.base_dir}/testdata/single_bam_folder/merge_bam"
    
    // Model paths
    clairsto_models = "${params.base_dir}/models/ClairS-TO/r1041_e82_400bps_sup_v420"
}

process {
    // Default settings for all processes
    executor = 'local'
    
    // Default container
    container = 'vilhelmmagnuslab/nwgs_default_images_latest:latest'
    
    withName: 'ace_tmc' {
        container = 'vilhelmmagnuslab/ace_1.24.0:latest'
        cpus = 4
        memory = '8 GB'
        containerOptions = '--bind $projectDir'
    }
    
    withName: 'annotatecnv' {
        container = 'vilhelmmagnuslab/annotcnv:latest'
    }
    
    withName: 'clairs_to' {
        container = 'vilhelmmagnuslab/clairs-to:latest'
        cpus = 8
        memory = '16 GB'
        containerOptions = "-B \$projectDir/models/ClairS-TO:/opt/models -B \$projectDir --env CONDA_PREFIX=/opt/micromamba/envs/clairs-to"
    }
    
    withName: 'clair3' {
        container = 'vilhelmmagnuslab/clair3_amd64:latest'
    }
    
    withName:igv_tools {
        container = 'vilhelmmagnuslab/igv_report_amd64:latest'
    }
    
    withName:circosplot {
        container = 'vilhelmmagnuslab/vcf2circos:latest'
    }
    
    withName:run_nn_classifier {
        container = 'vilhelmmagnuslab/nanodx_env:latest'
        containerOptions = "-B \$projectDir"
    }
    
    withName:markdown_report {
        container = 'vilhelmmagnuslab/markdown_images_28feb2025:latest'
    }
    
    withName:cramino_report {
        container = 'vilhelmmagnuslab/mgmt_nanopipe_amd64_18feb2025_cramoni:latest'
    }
    
    withName:annotesv {
        container = 'vilhelmmagnuslab/annotcnv_images_27feb1025:latest'
    }
    
    withName: 'plot_genomic_regions' {
        container = 'vilhelmmagnuslab/gviz:latest'
        cpus = 4
        memory = '8 GB'
        containerOptions = '--bind $projectDir --contain --cleanenv'
    }
}

singularity {
    enabled = true
    autoMounts = true
    runOptions = '--bind $projectDir --bind /proc:/proc:ro --no-home'
}

conda {
    enabled = true
}